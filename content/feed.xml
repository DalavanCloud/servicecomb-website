<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-07-21T07:57:34+08:00</updated><id>/</id><title type="html">Apache ServiceComb (incubating)</title><subtitle>The homepage of ServiceComb</subtitle><author><name>{&quot;name&quot;=&gt;nil, &quot;avatar&quot;=&gt;&quot;/assets/images/ServiceComb-logo-3.jpg&quot;, &quot;bio&quot;=&gt;&quot;ServiceComb is a microservice framework that provides service registration, discovery, configuration and management utilities.&quot;, &quot;biocn&quot;=&gt;&quot;ServiceComb提供了一套关于服务注册，服务发现，服务配置以及管理功能的微服务框架&quot;, &quot;location&quot;=&gt;&quot;China&quot;, &quot;locationcn&quot;=&gt;&quot;中国&quot;, &quot;email&quot;=&gt;&quot;servicecomb-developers@googlegroups.com&quot;, &quot;uri&quot;=&gt;nil, &quot;bitbucket&quot;=&gt;nil, &quot;codepen&quot;=&gt;nil, &quot;dribbble&quot;=&gt;nil, &quot;flickr&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;foursquare&quot;=&gt;nil, &quot;github&quot;=&gt;&quot;ServiceComb&quot;, &quot;google_plus&quot;=&gt;nil, &quot;keybase&quot;=&gt;nil, &quot;instagram&quot;=&gt;nil, &quot;lastfm&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;pinterest&quot;=&gt;nil, &quot;soundcloud&quot;=&gt;nil, &quot;stackoverflow&quot;=&gt;nil, &quot;steam&quot;=&gt;nil, &quot;tumblr&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;vine&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;xing&quot;=&gt;nil, &quot;youtube&quot;=&gt;nil}</name><email>servicecomb-developers@googlegroups.com</email></author><entry xml:lang="cn"><title type="html">轻松微服务系列：边缘服务支持统一认证</title><link href="/cn/docs/easy-build-microservice-system-part-IV/" rel="alternate" type="text/html" title="轻松微服务系列：边缘服务支持统一认证" /><published>2018-07-10T00:00:00+08:00</published><updated>2018-07-10T19:00:00+08:00</updated><id>/cn/docs/easy-build-microservice-system-part-IV</id><content type="html" xml:base="/cn/docs/easy-build-microservice-system-part-IV/">&lt;h2 id=&quot;轻松微服务系列边缘服务支持统一认证&quot;&gt;轻松微服务系列：边缘服务支持统一认证&lt;/h2&gt;
&lt;p&gt;在前一篇博文&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/docs/easy-build-microservice-system-part-III/&quot;&gt;《轻松微服务系列：开发高性能边缘服务》&lt;/a&gt;，我们开发了具备基本路由能力的高性能边缘服务。这篇博文我们将在Edge服务上实施如何扩展支持统一认证。&lt;/p&gt;

&lt;h3 id=&quot;设计思路&quot;&gt;设计思路&lt;/h3&gt;
&lt;p&gt;正如前面的博文提到过，统一认证的目的是在Edge入口处进行访问认证，避免需要在所有的微服务中都承载重复的认证机制，因此：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;我们先要将认证功能作为一个独立的Procuder发布出来，使Edge服务能够随时认证Token，我们将其命名为&lt;code class=&quot;highlighter-rouge&quot;&gt;AuthenticationService&lt;/code&gt;，放在用户服务中；&lt;/li&gt;
  &lt;li&gt;将无需认证的访问请求识别出来，包括：&lt;/li&gt;
&lt;/ol&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;功能&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;login&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;登录验证，通过后为用户生成Token&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;logon&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;新用户注册&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;除此之外其他业务请求都需要做Token认证；&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Edge服务转发访问请求之前，对需要认证的请求先做统一认证，认证通过之后才转发，我们使用&lt;code class=&quot;highlighter-rouge&quot;&gt;HttpServerFilter&lt;/code&gt;扩展这个能力：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/FilterChain.png&quot; alt=&quot;FilterChain&quot; /&gt;&lt;/p&gt;

&lt;p&gt;统一认证流程时序图为：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/EdgeAuth.png&quot; alt=&quot;EdgeAuth&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;实现统一认证&quot;&gt;实现统一认证&lt;/h3&gt;
&lt;h4 id=&quot;第一步发布认证服务&quot;&gt;第一步：发布认证服务&lt;/h4&gt;
&lt;h5 id=&quot;定义authenticationservice&quot;&gt;定义AuthenticationService&lt;/h5&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AuthenticationService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;实现并发布authenticationservice&quot;&gt;实现并发布AuthenticationService&lt;/h5&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestSchema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schemaId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;authentication&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AuthenticationServiceImpl&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AuthenticationService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;AuthenticationServiceImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tokenStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;incorrect token&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第二步实现统一认证authenticationfilter&quot;&gt;第二步：实现统一认证AuthenticationFilter&lt;/h4&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AuthenticationFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServerFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RestTemplate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RestTemplateBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USER_SERVICE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user-service&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EDGE_AUTHENTICATION_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;edge-authentication-name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOT_REQUIRED_VERIFICATION_USER_SERVICE_METHODS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;logon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;validate&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;afterReceiveRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Invocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpServletRequestEx&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestEx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isInvocationNeedValidate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getMicroserviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOperationName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServletRequestEx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getHeader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUTHORIZATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;template&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getForObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cse://&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USER_SERVICE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/validate?token={token}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;//Add header&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;invocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EDGE_AUTHENTICATION_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failResp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNAUTHORIZED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;authentication failed, invalid token&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failResp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;UNAUTHORIZED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;authentication failed, missing AUTHORIZATION header&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;isInvocationNeedValidate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;operationPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;USER_SERVICE_NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOT_REQUIRED_VERIFICATION_USER_SERVICE_METHODS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;operationPath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;别忘了通过SPI机制加载它，在&lt;code class=&quot;highlighter-rouge&quot;&gt;resources\META-INF\services&lt;/code&gt;目录中创建&lt;code class=&quot;highlighter-rouge&quot;&gt;org.apache.servicecomb.common.rest.filter.HttpServerFilter&lt;/code&gt;文件：&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;org.apache.servicecomb.scaffold.edge.filter.AuthenticationFilter
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第三步在用户微服务中增加修改密码的功能用于验证&quot;&gt;第三步：在用户微服务中增加修改密码的功能用于验证&lt;/h4&gt;
&lt;p&gt;现有的&lt;code class=&quot;highlighter-rouge&quot;&gt;login&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;logon&lt;/code&gt;都无需认证，因此我们在用户微服务中增加需要认证的修改密码的功能用于验证统一认证。&lt;/p&gt;
&lt;h5 id=&quot;在userservice中添加修改密码&quot;&gt;在UserService中添加修改密码&lt;/h5&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//需要认证的修改密码功能&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;changePassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserUpdateDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;在userserviceimpl中实现修改密码&quot;&gt;在UserServiceImpl中实现修改密码&lt;/h5&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;changePassword&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;changePassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserUpdateDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validateUserUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getOldPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userUpdate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getNewPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;wrong password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user name not exist&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;incorrect user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;验证实现的统一认证&quot;&gt;验证实现的统一认证&lt;/h3&gt;
&lt;h4 id=&quot;确认authenticationfilter在edge服务中成功加载&quot;&gt;确认AuthenticationFilter在Edge服务中成功加载&lt;/h4&gt;
&lt;p&gt;在Edge服务的启动日志中能够找到：&lt;/p&gt;
&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2018-07-13 14:38:48,756 [INFO]   1. org.apache.servicecomb.scaffold.edge.filter.AuthenticationFilter. org.apache.servicecomb.foundation.common.utils.SPIServiceUtils.loadSortedService(SPIServiceUtils.java:79)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;用户登录&quot;&gt;用户登录&lt;/h4&gt;
&lt;p&gt;使用zhengyangyong登录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/LoginFirst.png&quot; alt=&quot;LoginFirst&quot; /&gt;&lt;/p&gt;

&lt;p&gt;拿到的Token值为：eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJ6aGVuZ3lhbmd5b25nIiwiZXhwIjoxNTMwNjA4OTczfQ.90teWUNbypPZvds_SD7Kus_y7wLc4b6VzC_aIVg8sLItKxwQ0g4V9BDU665PlqQY5KM-mnk8y0R6ENL1T8YVFg&lt;/p&gt;

&lt;h4 id=&quot;不带authorization-header请求changepassword&quot;&gt;不带Authorization Header请求changePassword&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/NoAuthHeader.png&quot; alt=&quot;NoAuthHeader&quot; /&gt;&lt;/p&gt;

&lt;p&gt;返回的失败信息是：authentication failed, missing AUTHORIZATION header&lt;/p&gt;

&lt;h4 id=&quot;使用错误的token请求changepassword&quot;&gt;使用错误的Token请求changePassword&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/ErrorAuthHeader.png&quot; alt=&quot;ErrorAuthHeader&quot; /&gt;&lt;/p&gt;

&lt;p&gt;返回的失败信息是：authentication failed : InvocationException: code=400;msg=CommonExceptionData [message=incorrect token]&lt;/p&gt;

&lt;h4 id=&quot;使用正确的token请求changepassword&quot;&gt;使用正确的Token请求changePassword&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/AuthSuccess.png&quot; alt=&quot;AuthSuccess&quot; /&gt;&lt;/p&gt;

&lt;p&gt;修改密码成功。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这里可能有疑问，使用zhengyangyong登录后，是可以通过这个Token修改其他用户例如lidagang的密码的，这是因为我们目前构建的validate仅检查Token的有效性，而不做权限检查，基于RBAC的角色权限管理系统将会在未来构建。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;参考资料&quot;&gt;参考资料&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;AuthenticationFilter的完整&lt;a href=&quot;https://github.com/zhengyangyong/scaffold/blob/master/edge-service/src/main/java/org/apache/servicecomb/scaffold/edge/filter/AuthenticationFilter.java&quot;&gt;代码&lt;/a&gt;；&lt;/li&gt;
  &lt;li&gt;HttpServerFilter的&lt;a href=&quot;https://github.com/apache/incubator-servicecomb-docs/blob/master/java-chassis-reference/zh_CN/general-development/http-filter.md&quot;&gt;介绍&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Yangyong Zheng</name><email>yangyong.zheng@huawei.com</email><uri>https://zhengyangyong.github.io</uri></author><category term="Edge Service" /><category term="API Gateway" /><category term="Authentication" /><summary type="html">轻松微服务系列：边缘服务支持统一认证</summary></entry><entry xml:lang="en"><title type="html">Apache ServiceComb (incubating) Day Report</title><link href="/docs/apache-servicecomb-incubating-day-report/" rel="alternate" type="text/html" title="Apache ServiceComb (incubating) Day Report" /><published>2018-06-28T00:00:00+08:00</published><updated>2018-06-14T10:26:28+08:00</updated><id>/docs/apache-servicecomb-incubating-day-report</id><content type="html" xml:base="/docs/apache-servicecomb-incubating-day-report/">&lt;p&gt;&lt;strong&gt;Apache ServiceComb (incubating) Day Report&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​  &lt;br /&gt;
​&lt;strong&gt;Event Date/Time&lt;/strong&gt;: Wednesday, June 27, 2018, 11:00 – 17:30&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event Location&lt;/strong&gt;: Room 211, China National Convention Center, Beijing, China&lt;/p&gt;

&lt;p&gt;The microservice open source project - Apache ServiceComb (incubating) host a Open Day Meetup at the China National Convention Center (Beijing, China) from 11.00am to 17.30pm on Wednesday, June 27th. According the workshop, 6 speaker presents 7 topics about Interpretation of the Apache community, Business Microservices Commercial Case Sharing, Overview of ServiceComb Community and Technology Sharing, Domain-Driven Design (DDD) in Microservices etc. 
About 80 participants attended the workshop on-site and about 300 participants watched the workshop online. Besides, during the LC3 conference, the servicecomb community release a letter of “ServiceComb Anniversary” which gained thousands of clicks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/lc3-workshop/1.jpg&quot; alt=&quot;1&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/2.jpg&quot; alt=&quot;2&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/3.jpg&quot; alt=&quot;3&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/4.jpg&quot; alt=&quot;4&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/5.jpg&quot; alt=&quot;5&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/6.jpg&quot; alt=&quot;6&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/7.jpg&quot; alt=&quot;7&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/8.jpg&quot; alt=&quot;8&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/9.jpg&quot; alt=&quot;9&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/10.jpg&quot; alt=&quot;10&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/11.jpg&quot; alt=&quot;11&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/12.jpg&quot; alt=&quot;12&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/13.jpg&quot; alt=&quot;13&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/14.jpg&quot; alt=&quot;14&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/15.jpg&quot; alt=&quot;15&quot; /&gt;
&lt;img src=&quot;/assets/images/lc3-workshop/16.jpg&quot; alt=&quot;16&quot; /&gt;&lt;/p&gt;</content><author><name>Wang Qilin</name><email>wangqilintech@gmail.com</email><uri>https://github.com/wangkirin</uri></author><category term="microservice" /><category term="Meetup" /><category term="report" /><summary type="html">Apache ServiceComb (incubating) Day Report</summary></entry><entry xml:lang="cn"><title type="html">LC3大会微服务Workshop-Apaceh ServiceComb(incubating) Day 演讲PPT</title><link href="/cn/docs/apache-servicecomb-day-slides/" rel="alternate" type="text/html" title="LC3大会微服务Workshop-Apaceh ServiceComb(incubating) Day 演讲PPT" /><published>2018-06-27T00:00:00+08:00</published><updated>2018-04-26T17:18:43+08:00</updated><id>/cn/docs/apache-servicecomb-day-slides</id><content type="html" xml:base="/cn/docs/apache-servicecomb-day-slides/">&lt;p&gt;&lt;strong&gt;《深度解读Apache软件基金会》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/1_How_Apache_works_jb.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;Jean-Baptiste Onofré Apache Member，Talend的Fellow, 04年开始从事Apache软件基金会相关工作，Karaf、Camel、Carbondata等超过20个Apache项目的PMC member。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;深度解读全球最大的开源软件基金会Apache，诠释什么是Apache Way，及Apache的吸引开源项目之处，结合实际项目讲述从开源到孵化再到毕业的全过程，介绍当前ServiceComb的Apache孵化状态。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《ServiceComb社区概况与Roadmap》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/2_ServiceComb-introduction-jiangning.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;姜宁 Apache Member，华为开源能力中心技术专家&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;介绍 Apache ServiceComb (incubating) 社区的理念，当前概况，技术走向与社区活动。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《软通动力基于ServiceComb的智能城市微服务改造历程》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/3_How_Smart_City_Microserviced_Based_on_ServiceComb_from_iSoftStone.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;鲍永伟 软通动力智慧城市业务副总裁，聚焦于云计算与大数据相关的创新技术在智慧城市的应用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;软通动力智慧城市业务涉及系统繁多并交互复杂，在进行微服务化时面临微服务粒度设计不合理、代码重复率高、大型应用微服务部署困难等阵痛，本分享介绍软通动力如何使用ServiceComb，特别是ServiceComb的Swagger API，解决阵痛的微服务化历程，使能烟囱系统互通、系统松耦合，以应对智慧城市的微服务多样性挑战。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《ServiceComb Java SDK和注册中心详解》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/4_Java_sdk_details_wujimin.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;吴继敏 Apache ServiceComb (incubating) PPMC，ServiceComb商业版本 华为云微服务引擎 原作者&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;介绍 ServiceComb Java Chassis、Service Center的设计细节和特性。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《ServiceComb在华为消费者云的亿级用户微服务实践》&lt;/strong&gt;
 &lt;a href=&quot;/assets/slides/20180627/5_Millions_Users_Solution_Based_on_ServiceComb_Microservices_from_Huawei_Consumer_Cloud_lilinfeng.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;李林锋 华为消费者云应用市场微服务架构师，多年平台中间件、云平台、微服务框架设计和开发经验。工作之余爱好技术写作，《Netty权威指南》和《分布式服务框架原理与实践》作者&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;华为消费者云服务为全球100多个国家数亿华为终端用户提供精品云服务，为了支撑业务的快速发展，需要通过微服务架构驱动价值需求更敏捷和高效的交付。利用ServiceComb对SpringMVC、透明RPC开发模式的支持，业务已有的代码可以低成本的迁移到新的微服务架构，同时利用ServiceComb对Reactive异步编程模型的支持，业务实现了全栈异步化改造，相比于传统的同步阻塞式服务调用，性能提升数倍，但是资源损耗却大幅降低…更多实践案例，尽在ServiceComb在华为消费者云的亿级用户实践分享中。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《微服务的领域驱动设计》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/6_DDD_in_Microservics_wanglei.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt; 王磊 微服务国内先驱，《微服务架构与实践》作者，华为微服务专家，前ThoughtWorks首席咨询师。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;微服务作为新时代架构方式被业界广泛采纳，也顺理成章成为DDD领域驱动设计的理念的落地工具。本议题分享DDD领域驱动设计理念是如何与微服务友好结合和实践的。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《ServiceComb 事务一致性解决方案详解》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/7_Detailed_Introduction_of_Transaction_Consistency_Solution_from_ServiceComb-Saga.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;姜宁 Apache Member，华为开源能力中心技术专家&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;分享ServiceComb的分布式事务Saga解决方案与实践&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;《ServiceComb的ServiceMesh思考》&lt;/strong&gt;
&lt;a href=&quot;/assets/slides/20180627/8_Thinking_about_ServiceMesh_in_ServiceComb.pdf&quot;&gt;点击下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;田晓亮 华为云 Service Mesh 架构师&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;分享ServiceComb对于服务网格Service Mesh的最新思考，以及ServiceMesh在华为云的实践。&lt;/p&gt;</content><author><name>Kirin Wang</name></author><category term="微服务" /><category term="LC3，PPT，Workshop" /><summary type="html">LC3大会微服务Workshop-Apaceh ServiceComb(incubating) Day 演讲PPT</summary></entry><entry xml:lang="cn"><title type="html">微服务 Meetup：Apache ServiceComb (incubating) Day 详细议程</title><link href="/cn/docs/apache-servicecomb-incubating-day/" rel="alternate" type="text/html" title="微服务 Meetup：Apache ServiceComb (incubating) Day 详细议程" /><published>2018-06-14T00:00:00+08:00</published><updated>2018-06-14T10:26:28+08:00</updated><id>/cn/docs/apache-servicecomb-incubating-day</id><content type="html" xml:base="/cn/docs/apache-servicecomb-incubating-day/">&lt;p&gt;&lt;strong&gt;微服务开源 ServiceComb Apache基金会孵化项目将于6月27日（星期三）上午11点00分至下午17点30分在国家会议中心举办为期一天的开放日Meetup活动。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;本次开放日将主要聚焦在以下几个方面，和企业、用户及开发者一同探讨微服务技术及方向。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Apache 社区解读&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;企业微服务商用案例实践分享&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ServiceComb的社区概况和技术分享&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;微服务领域驱动设计方法&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;会议日期/时间&lt;/strong&gt;：2018 年 6 月 27 日，星期三，9:30 – 17:30&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;会议地址&lt;/strong&gt;：中国国家会议中心，北京, &lt;strong&gt;Room 211&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;会议费用&lt;/strong&gt;： 免费&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参加方式： 可直接免费到场参加Meetup，使用电梯抵达二楼211房间&lt;/strong&gt;。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;关于Apache ServiceComb (incubating) 项目&lt;/strong&gt;：&lt;/p&gt;

&lt;p&gt;ServiceComb Apache软件基金会孵化项目的主体代码由华为云捐赠，致力于帮助企业轻松构建云原生应用及传统企业业务快速微服务化，通过系列解决方案帮助用户快速开发微服务的同时实现对这些微服务应用的高效运维管理。它具有完整的微服务生态栈，无厂商锁定，当前遵循Apache Way进行孵化，已拥有如消费者云、云EI、云安全、云核等华为业务之外的一批非华为商用用户，且社区和开发者也日趋多样化。&lt;/p&gt;

&lt;p&gt;这是一个免费的开放日Meetup活动，由Apache ServiceComb (incubating)社区组织，华为云赞助主办，我们邀请到了来自商用企业、Apache、ServiceComb社区及华为的多位专家和工程师，与大家进行分享和探讨，详细议题如下：&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《深度解读Apache软件基金会》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt;11:00-12:00&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;Jean-Baptiste Onofré   Apache Member，Talend的Fellow, 04年开始从事Apache软件基金会相关工作，Karaf、Camel、Carbondata等超过20个Apache项目的PMC member。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;深度解读全球最大的开源软件基金会Apache，诠释什么是Apache Way，及Apache的吸引开源项目之处，结合实际项目讲述从开源到孵化再到毕业的全过程，介绍当前ServiceComb的Apache孵化状态。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《ServiceComb社区概况与Roadmap 》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt;13:30-13:45&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;讲师：&lt;/strong&gt;姜宁 Apache Member，华为开源能力中心技术专家&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;介绍 Apache ServiceComb (incubating) 社区的理念，当前概况，技术走向与社区活动。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《软通动力基于ServiceComb的智能城市微服务改造历程》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt; 13:30-13:45&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;鲍永伟 软通动力智慧城市业务副总裁，聚焦于云计算与大数据相关的创新技术在智慧城市的应用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;软通动力智慧城市业务涉及系统繁多并交互复杂，在进行微服务化时面临微服务粒度设计不合理、代码重复率高、大型应用微服务部署困难等阵痛，本分享介绍软通动力如何使用ServiceComb，特别是ServiceComb的Swagger API，解决阵痛的微服务化历程，使能烟囱系统互通、系统松耦合，以应对智慧城市的微服务多样性挑战。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《ServiceComb Java SDK和注册中心详解 》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt; 14:15-14:45&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;吴继敏  Apache ServiceComb (incubating) PPMC，ServiceComb商业版本 华为云微服务引擎 原作者&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;介绍 ServiceComb Java Chassis、Service Center的设计细节和特性。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《ServiceComb在华为消费者云的亿级用户微服务实践》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt;14:45-15:15&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;李林锋     华为消费者云应用市场微服务架构师，多年平台中间件、云平台、微服务框架设计和开发经验。工作之余爱好技术写作，《Netty权威指南》和《分布式服务框架原理与实践》作者&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt; 华为消费者云服务为全球100多个国家数亿华为终端用户提供精品云服务，为了支撑业务的快速发展，需要通过微服务架构驱动价值需求更敏捷和高效的交付。利用ServiceComb对SpringMVC、透明RPC开发模式的支持，业务已有的代码可以低成本的迁移到新的微服务架构，同时利用ServiceComb对Reactive异步编程模型的支持，业务实现了全栈异步化改造，相比于传统的同步阻塞式服务调用，性能提升数倍，但是资源损耗却大幅降低…更多实践案例，尽在ServiceComb在华为消费者云的亿级用户实践分享中。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《微服务的领域驱动设计》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt; 15:25-15:55&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt; 王磊    微服务国内先驱，《微服务架构与实践》作者，华为微服务专家，前ThoughtWorks首席咨询师。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;微服务作为新时代架构方式被业界广泛采纳，也顺理成章成为DDD领域驱动设计的理念的落地工具。本议题分享DDD领域驱动设计理念是如何与微服务友好结合和实践的。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《ServiceComb 事务一致性解决方案详解 》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt; 15:55-16:25&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;姜宁 Apache Member，华为开源能力中心技术专家&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;分享ServiceComb的分布式事务Saga解决方案与实践&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;《ServiceComb的ServiceMesh思考 》&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;时间：&lt;/strong&gt;16:25-17:25&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;主讲人：&lt;/strong&gt;田晓亮 华为云 Service Mesh 架构师&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt;分享ServiceComb对于服务网格Service Mesh的最新思考，以及ServiceMesh在华为云的实践。&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;如您需要在参加workshop之余参观LC3展台，请您加入ServiecComb Gitter聊天室咨询：&lt;/strong&gt;   &lt;br /&gt;
&lt;strong&gt;&lt;a href=&quot;https://gitter.im/ServiceCombUsers/Lobby&quot;&gt;ServiceComb Gitter 聊天室&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name>Zen Lin</name><email>zenlintechnofreak@gmail.com</email><uri>http://zenlintechnofreak.github.io</uri></author><category term="微服务" /><category term="Meetup" /><summary type="html">Detailed Agenda of Apache ServiceComb (incubating) Day</summary></entry><entry xml:lang="en"><title type="html">Microservice Meetup: Detailed Agenda of Apache ServiceComb (incubating) Day</title><link href="/docs/apache-servicecomb-incubating-day/" rel="alternate" type="text/html" title="Microservice Meetup: Detailed Agenda of Apache ServiceComb (incubating) Day" /><published>2018-06-14T00:00:00+08:00</published><updated>2018-06-14T10:26:28+08:00</updated><id>/docs/apache-servicecomb-incubating-day</id><content type="html" xml:base="/docs/apache-servicecomb-incubating-day/">&lt;p&gt;&lt;strong&gt;Apache ServiceComb (incubating) Day&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​  &lt;br /&gt;
​  &lt;br /&gt;
The microservice open source project - Apache ServiceComb (incubating) will host a Open Day Meetup at the China National Convention Center (Beijing, China) from 11.00am to 17.30pm on Wednesday, June 27th.&lt;/p&gt;

&lt;p&gt;The Open Day will focus on the following aspects and discuss the technology and direction of microservices with enterprises, users and developers.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;- Interpretation of the Apache community&lt;/p&gt;

&lt;p&gt;- Business Microservices Commercial Case Sharing&lt;/p&gt;

&lt;p&gt;- Overview of ServiceComb Community and Technology Sharing&lt;/p&gt;

&lt;p&gt;- Domain-Driven Design (DDD) in Microservices&lt;/p&gt;

&lt;p&gt;​  &lt;br /&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event Date/Time&lt;/strong&gt;: Wednesday, June 27, 2018, 11:00 – 17:30&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event Location&lt;/strong&gt;: Room 211, China National Convention Center, Beijing, China&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Event Cost&lt;/strong&gt;: Complimentary, go up to the Room 211 using the elevators to level 2.&lt;/p&gt;

&lt;p&gt;​  &lt;br /&gt;
​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;About Apache ServiceComb (incubating) project:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;​         &lt;em&gt;The main code of the Apache ServiceComb (incubating) Project was donated by Huawei Cloud. The project is dedicated to help enterprises easily build cloud native applications and help build microservices from traditional enterprise business. By providing a series of solutions, Apache ServiceComb (incubating) helps users to develop microservices quickly and operate maintenance efficiently of these microservices applications, with a full microservices technology stack, without vendor lock-in. Currently, ServiceComb is following the “Apache Way”. It is used in HUAWEI businesses such as Consumer Cloud, Cloud EI, Cloud Security, Cloud Core Network, also popular in non-HUAWEI users, such as iSoftStone, pactera, hulingwulian Technology, ceewa, medsci, Hang Ling Technology, Gaomaizhiyuan Technology, etc. The developers are also increasingly diversified.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is a free Open Meetup organized by the Apache ServiceComb (incubating) community and sponsored by Huawei Cloud. We have invited several experts and engineers from commercial enterprises, Apache Foundation, ServiceComb community and HUAWEI to share their experiences. Detailed agenda as follows:&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Apache Works&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1100-1200&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker&lt;/strong&gt;: Jean-Baptiste Onofré; Apache Member, fellow of Talend, who started work on the Apache Software Foundation in 2004, and PMC member of 20+ Apache projects such as Karaf, Camel, and Carbondata.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In-depth interpretation of the world’s largest open source software foundation – Apache Software Foundation. Introduce what is the “Apache Way” and its attraction, the whole process from open source to incubation and then graduated combined with actual project. Besides, it will introduce the current incubating status of ServiceComb.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ServiceComb Roadmap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1330-1345&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker:&lt;/strong&gt; Jiang Ning, Apache Member, Huawei Opensource Expert.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Introduce Vision, current status, technology Roadmap and community activities of Apache ServiceComb (incubating) community.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How Smart City Microserviced Based on ServiceComb from iSoftStone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1345-1415&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker&lt;/strong&gt;: Bao Yongwei; VP of iSoftStone Smart City Business, focusing on implementation and innovations in smart city related to cloud computing and big data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;iSoftStone Smart City Business involves a large number of systems with complex interactions. During the process of microservices implementation, it faced inappropriate microservices granularity, high code duplication rate, and difficulty in deployment of large application microservices. This speech will introduce how iSoftStone use ServiceComb, especially ServiceComb’s Swagger API, to resolve the pain points of microservices process, enable interoperability and decoupled chimney  systems to meet the challenges of microservices diversity in smart city.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Detailed Introduction of Java SDK and Service  Center&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1415-1445&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker:&lt;/strong&gt; Wu Jiminm,  Apache ServiceComb (incubating) PPMC, Original Author of Huawei Cloud Service Engine&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Introduce technical details of Java SDK and Service  Center from ServiceComb.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Millions Users Solution Based on ServiceComb Microservices from Huawei Consumer Cloud&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1445-1515&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker&lt;/strong&gt;: Li Linfeng, microservices architect for Huawei’s Consumer Cloud application market, who has years of experience in designing and developing platform middleware, cloud platforms, and microservices. Author of “Netty authoritative guide” and “The principle and practice of distributed service framework”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Huawei Consumer Cloud services provide high-quality cloud services for hundreds of millions of Huawei end users in more than 100 countries. In order to support the rapid development of the business, it is necessary to drive delivery of value requirements efficiently and agilely through the microservices architecture. By using SpringMVC and transparent RPC development model from ServiceComb, the existing business code can be migrated to the new microservices architecture at a low cost. Besides, the business implements full-stack asynchronous transformation using the Reactive asynchronous programming model from ServiceComb. Compared with the traditional synchronous blocking service call, the performance is improved several times, but the resource loss is greatly reduced. More practical cases will be shown on this topic.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Domain Driven Design (DDD) in Microservices&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1525-1555&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker&lt;/strong&gt;: Wang Lei, pioneer of microservices in China, author of “Microservices Architecture and Practice”, Huawei Microservices Expert, and former ThoughtWorks Chief Consultant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;As a new architecture style, microservice has been widely adopted by the industry. It has become a fulfillment tool for the concept of DDD-driven design. This topic shares how to practice microservice with Domain Driven Design philosophy friendly.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Detailed Introduction of Transaction Consistency Solution from ServiceComb-Saga&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time&lt;/strong&gt;: 1555-1625&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker:&lt;/strong&gt;  Jiang Ning Apache Member, Huawei Opensource Expert.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Share ServiceComb’s distributed transaction Saga solution and best practices.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thinking about ServiceMesh in ServiceComb&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time:&lt;/strong&gt; 1625-1730&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speaker&lt;/strong&gt;: Tian Xiaoliang, Architect in Service Mesh from Huawei Cloud.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Share ServiceComb’s latest thinking on Service Mesh, and ServiceMesh’s practice in Huawei Cloud.&lt;/p&gt;

&lt;p&gt;​&lt;/p&gt;

&lt;p&gt;​   &lt;br /&gt;
&lt;strong&gt;If you want to freely visit the LC3 booth except attending the meet up , please go to our Gitter to inquire:&lt;/strong&gt; &lt;br /&gt;
&lt;a href=&quot;https://gitter.im/ServiceCombUsers/Lobby&quot;&gt;ServiceComb Gitter Room&lt;/a&gt;&lt;/p&gt;</content><author><name>Zen Lin</name><email>zenlintechnofreak@gmail.com</email><uri>http://zenlintechnofreak.github.io</uri></author><category term="microservice" /><category term="Meetup" /><summary type="html">Real time updated information of Apache ServiceComb (incubating) Day</summary></entry><entry xml:lang="cn"><title type="html">轻松微服务系列：开发高性能边缘服务</title><link href="/cn/docs/easy-build-microservice-system-part-III/" rel="alternate" type="text/html" title="轻松微服务系列：开发高性能边缘服务" /><published>2018-06-07T00:00:00+08:00</published><updated>2018-06-07T19:00:00+08:00</updated><id>/cn/docs/easy-build-microservice-system-part-III</id><content type="html" xml:base="/cn/docs/easy-build-microservice-system-part-III/">&lt;h2 id=&quot;轻松微服务系列开发高性能边缘服务&quot;&gt;轻松微服务系列：开发高性能边缘服务&lt;/h2&gt;
&lt;p&gt;在前一篇博文&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/docs/easy-build-microservice-system-part-II/&quot;&gt;《轻松微服务系列：快速实现客户关系管理系统的用户服务》&lt;/a&gt;，我们已经详细演示了从Archetype创建微服务后如何填充业务逻辑，快速构建包含JWT认证的用户服务。这篇博文我们将目光聚焦在Edge服务上，介绍如何构建高性能边缘服务应对高吞吐API网关的挑战。&lt;/p&gt;

&lt;h3 id=&quot;什么是边缘服务edge-service&quot;&gt;什么是边缘服务（Edge Service）&lt;/h3&gt;
&lt;p&gt;边缘服务也是一个微服务，微服务化系统通常使用边缘服务（Edge Service）作为所有其它微服务的统一入口，因此它也常常会被称为API Gateway，使用边缘服务的好处有如下几点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;动态路由：动态配置URL地址与微服务之间的对应关系，便于扩展，以及实现版本灰度发布等；&lt;/li&gt;
  &lt;li&gt;统一认证：在入口处进行访问认证，避免需要在所有的微服务中都承载重复的认证机制；&lt;/li&gt;
  &lt;li&gt;集中监控：与统一认证类似，在边缘服务对入口调用进行监控，容易统计流量信息。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;边缘服务的作用和原理&quot;&gt;边缘服务的作用和原理&lt;/h3&gt;
&lt;p&gt;我们先来看不使用边缘服务，UI直接调用用户服务的场景：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/DirectInvoke.png&quot; alt=&quot;DirectInvoke&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看出这种调用方式，UI缺乏一定的灵活性，体现在：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;UI的实现绑定了Chassis的编程语言Java，无法使用PHP等其它前端技术开发；&lt;/li&gt;
  &lt;li&gt;UI访问微服务的路径无法动态配置，如果作为后端的微服务系统发生调整，则UI很可能需要修改；&lt;/li&gt;
  &lt;li&gt;UI很容易混入复合（编排）调用的逻辑，使得结构变得复杂难以维护。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们再看引入边缘服务后，UI如何通过边缘服务调用用户服务：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/InvokeViaEdge.png&quot; alt=&quot;InvokeViaEdge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Edge服务将在&lt;code class=&quot;highlighter-rouge&quot;&gt;9090&lt;/code&gt;端口上接受http rest调用，我们设计了下面的转发规则：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://{edge-host-name}:9090/{ServiceComb微服务Name}/{服务路径&amp;amp;参数}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;用户微服务名（&lt;code class=&quot;highlighter-rouge&quot;&gt;service_description.name&lt;/code&gt;）是&lt;code class=&quot;highlighter-rouge&quot;&gt;user-service&lt;/code&gt;，因此login调用URL：&lt;em&gt;cse://user-service/login&lt;/em&gt;可以通过：&lt;em&gt;http://{edge-host-name}:9090/user-service/login&lt;/em&gt; 访问。&lt;/p&gt;

&lt;p&gt;如此一来，微服务名成为了路径的一部分，http协议的&lt;code class=&quot;highlighter-rouge&quot;&gt;hostname&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt;将固定指向Edge服务保持不变，灵活性大大增加了。&lt;/p&gt;

&lt;p&gt;到此我们还可以再做一点点改进，引入一个自定义配置&lt;code class=&quot;highlighter-rouge&quot;&gt;edge.routing-short-path.{简称}&lt;/code&gt;，映射微服务名：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;edge:
  routing-short-path:
    user: user-service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上面的配置代表：&lt;em&gt;http://{edge-host-name}:9090/user/login&lt;/em&gt; 等效于：&lt;em&gt;http://{edge-host-name}:9090/user-service/login&lt;/em&gt; ，如此一来：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;URL能够更加简洁；&lt;/li&gt;
  &lt;li&gt;当微服务名发生变化，只需要调整对应的配置，不需要更改前端UI路径代码。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;实现边缘服务&quot;&gt;实现边缘服务&lt;/h3&gt;
&lt;h4 id=&quot;第一步引入edge-core依赖&quot;&gt;第一步：引入Edge Core依赖&lt;/h4&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.apache.servicecomb&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;edge-core&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第二步编写调度器dispatcher&quot;&gt;第二步：编写调度器Dispatcher&lt;/h4&gt;
&lt;p&gt;Edge服务的核心就是调度器Dispatcher，ServiceComb Edge Core中的Dispatcher基于高性能的Vertx Reactive，轻松应对百万量级API请求的挑战；只需要继承AbstractEdgeDispatcher抽象类，添加对应的逻辑即可：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EdgeDispatcher&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AbstractEdgeDispatcher&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EdgeDispatcher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//此Dispatcher的优先级，Order级越小，路由策略优先级越高&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//初始化Dispatcher的路由策略&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Router&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;///捕获 {ServiceComb微服务Name}/{服务路径&amp;amp;参数} 的URL&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/([^\\\\/]+)/(.*)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routeWithRegex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CookieHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routeWithRegex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;createBodyHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;routeWithRegex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;failureHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onFailure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//处理请求，请注意&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;onRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RoutingContext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathParams&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pathParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//从匹配的param0拿到{ServiceComb微服务Name}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;param0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//从匹配的param1拿到{服务路径&amp;amp;参数}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathParams&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;param1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//还记得我们之前说的做出一点点改进吗？引入一个自定义配置edge.routing-short-path.{简称}，映射微服务名；如果简称没有配置，那么就认为直接是微服务的名&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;serviceName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DynamicPropertyFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getStringProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;edge.routing-short-path.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//创建一个Edge转发&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EdgeInvocation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edgeInvocation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EdgeInvocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//允许接受任意版本的微服务实例作为Provider，未来我们会使用此（设置版本）能力实现灰度发布&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;edgeInvocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setVersionRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DefinitionConst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;VERSION_RULE_ALL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;edgeInvocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serviceName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpServerFilters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;edgeInvocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;edgeInvoke&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第三步加载调度器dispatcher&quot;&gt;第三步：加载调度器Dispatcher&lt;/h4&gt;
&lt;p&gt;ServiceComb Edge使用SPI（Service Provider Interface）的方式加载已经编写好的调度器Dispatcher，在resources目录下创建&lt;code class=&quot;highlighter-rouge&quot;&gt;META-INF.services/org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher&lt;/code&gt;配置文件，写入上一步EdgeDispatcher的类全名：&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{EdgeDispatcher的包名}.EdgeDispatcher
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第四步配置microserviceyaml&quot;&gt;第四步：配置microservice.yaml&lt;/h4&gt;
&lt;p&gt;边缘服务本身也是一个微服务，同样需要配置microservice.yaml：&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;APPLICATION_ID&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scaffold&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;service_description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;edge-service&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.0.1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;servicecomb&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;#配置ServiceCenter使得Edge能够发现其他微服务&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://127.0.0.1:30100&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#配置Rest Endpoint&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;0.0.0.0:9090&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#自定义的简称机制配置（这是我们自行扩展实现的）&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;routing-short-path&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;user-service&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：&lt;/p&gt;
  &lt;ol&gt;
    &lt;li&gt;除了配置Rest Endpoint，我们也支持配置Highway Endpoint，但Highway Endpoint只支持ServiceComb开发的微服务调用；&lt;/li&gt;
    &lt;li&gt;microservice.yaml中没有配置Handler，Edge支持所有Consumer端Handler，不支持Producer端Handler，调用链原理如下：&lt;/li&gt;
  &lt;/ol&gt;

  &lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/EdgeOnlySupportConsumerHandler.png&quot; alt=&quot;EdgeOnlySupportConsumerHandler&quot; /&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3 id=&quot;验证边缘服务&quot;&gt;验证边缘服务&lt;/h3&gt;
&lt;p&gt;启动用户微服务和Edge服务，使用&lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;注册一个用户：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/LogonViaEdge.png&quot; alt=&quot;LogonViaEdge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;成功，现在我们使用新注册的用户名&lt;code class=&quot;highlighter-rouge&quot;&gt;ldg&lt;/code&gt;登录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/LoginViaEdge.png&quot; alt=&quot;LoginViaEdge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;同样成功，并在Response中已经包含了正确的&lt;code class=&quot;highlighter-rouge&quot;&gt;AUTHORIZATION&lt;/code&gt;Header。&lt;/p&gt;

&lt;h3 id=&quot;性能比拼&quot;&gt;性能比拼&lt;/h3&gt;
&lt;p&gt;ServiceComb Java Chassis也支持集成Netflix Zuul作为网关服务，我们做了一次性能比较，使用ServiceComb Edge作为网关吞吐能力大幅优于Netflix Zuul，性能测试项目源代码在&lt;a href=&quot;https://github.com/zhengyangyong/gateway-perf&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;</content><author><name>Yangyong Zheng</name><email>yangyong.zheng@huawei.com</email><uri>https://zhengyangyong.github.io</uri></author><category term="Edge Service" /><category term="API Gateway" /><category term="Zuul" /><summary type="html">轻松微服务系列：开发高性能边缘服务</summary></entry><entry xml:lang="cn"><title type="html">如何从一名开源小白成长为Apache Committer</title><link href="/cn/docs/how-to-grow-up-to-be-an-apache-committer/" rel="alternate" type="text/html" title="如何从一名开源小白成长为Apache Committer" /><published>2018-06-06T00:00:00+08:00</published><updated>2018-06-06T11:00:00+08:00</updated><id>/cn/docs/how-to-grow-up-to-be-an-apache-committer</id><content type="html" xml:base="/cn/docs/how-to-grow-up-to-be-an-apache-committer/">&lt;h2 id=&quot;如何从一名开源小白成长为apache-committer&quot;&gt;如何从一名开源小白成长为Apache Committer&lt;/h2&gt;
&lt;p&gt;今天收到了来自Apache Vote我成为Committer的邮件，代表自己的贡献得到了充分的肯定；除了感谢团队的给力支持，我更希望将自己的成长经历——如何践行Apache Way的心得介绍给大家，让大家爱上Apache开源社区，也能和我一样成长为自己喜爱项目的Committer。&lt;/p&gt;

&lt;h3 id=&quot;根据个人贡献获得价值government-by-merit&quot;&gt;根据个人贡献获得价值（Government By Merit）&lt;/h3&gt;
&lt;p&gt;回忆我刚参与ServiceComb项目，面对上万行的存量代码，总觉得无从下手，甚至认为开源社区高手如云，如果没有深厚且对口的技术功底，还是不要来掺和了。&lt;/p&gt;

&lt;p&gt;在这个困难而关键的时候，社区导师给了我明确的指导——&lt;strong&gt;不要怕，从小事做起，不要“善小而不为”&lt;/strong&gt;。于是我静下心来，在Jira上寻找最简单的任务，主动请缨的&lt;a href=&quot;https://github.com/apache/incubator-servicecomb-java-chassis/pull/91&quot;&gt;第一个任务&lt;/a&gt;是支持配置兼容，具体需求是&lt;code class=&quot;highlighter-rouge&quot;&gt;cse.xxx&lt;/code&gt;配置项和&lt;code class=&quot;highlighter-rouge&quot;&gt;servicecomb.xxx&lt;/code&gt;配置项要具备等同效果，经过一番努力，成功Merge PR ；之后我又接下另一个简单任务，增加一个Annotation用于支持Json String作为请求参数……&lt;/p&gt;

&lt;p&gt;Apache Way非常看重个人贡献，没有贡献，一切无从谈起，&lt;strong&gt;与开源软件同行，不仅看你获得了多少，更要坚持长期贡献&lt;/strong&gt;，这是它与商业软件最大的不同。贡献并不区分大小，无论是增加重大特性，还是小小的改进、Bug Fix和修订文档错误，这些同样是项目茁壮成长的关键。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实际上大多数开源爱好者都是从修订文档错误开始的&lt;/strong&gt;，例如改正错别字、格式不正确以及订正描述等等，我对ServiceComb的理解也绝大多数来自&lt;a href=&quot;https://github.com/apache/incubator-servicecomb-website/pulls?q=is%3Apr+is%3Aclosed+author%3Azhengyangyong&quot;&gt;这方面的工作&lt;/a&gt;；这样不但能够在阅读文档的过程中更快的了解技术细节，也比较容易入手做出贡献。&lt;/p&gt;

&lt;p&gt;总之坚持下来，个人积累的贡献慢慢变厚，获得Apache的认可自然水到渠成。&lt;/p&gt;

&lt;h3 id=&quot;社区驱动community&quot;&gt;社区驱动（Community）&lt;/h3&gt;
&lt;p&gt;参与社区是技术成长最快的方式之一，Follow Apache社区的方式有订阅&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/developers/subscribe-mail-list/&quot;&gt;邮件列表&lt;/a&gt;和加入&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/developers/use-gitter/&quot;&gt;Gitter&lt;/a&gt;聊天室；从看大家讨论（讨论邮件一般会使用[Discussion]开头），到回答大家的问题（回复邮件和发送Gitter聊天），相信用不了多久你就能收获颇丰，并冒出自己的想法，迈出第一步提交第一个PR也就不难了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://servicecomb.incubator.apache.org/&quot;&gt;ServiceComb&lt;/a&gt;作为一个微服务一站式解决方案，融合侵入式、非侵入式场景并支持多语言，解放开发者，帮助用户和开发者将企业应用轻松微服务化和上云；大家在这里讨论的话题、发起的投票、以及提交的代码，无不与微服务密切相关。在这个社区中我不但学习到了知识，完成了开源（也包含微服务）小白的蜕变，还进一步接受了开源的洗礼——&lt;strong&gt;前辈指导我进步，我将所学传递给新人&lt;/strong&gt;；这个过程中我结识了很多新朋友，大家互通有无，不但极大的开阔了视野，也提高了自己的社交能力。&lt;/p&gt;

&lt;p&gt;Apache开发者来自全球，社区大多都是用英文来交流。通过阅读&lt;a href=&quot;http://servicecomb.incubator.apache.org/users/&quot;&gt;英文资料&lt;/a&gt;，使用英文在&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/developers/use-gitter/&quot;&gt;Gitter&lt;/a&gt;上与开发人员直接交流，通过英文邮件来探讨问题，在不知不觉中自己的英文水平也大大提高了。&lt;/p&gt;

&lt;h3 id=&quot;协作开发collaborative-development&quot;&gt;协作开发（Collaborative Development）&lt;/h3&gt;
&lt;p&gt;这也是我极力推荐参与开源社区开发的重要原因之一，&lt;strong&gt;当你提交PR后，无论代码有多么烂，你总能收获宝贵的Comments&lt;/strong&gt;，不花钱获得编程大师的指点——教你怎么写出优秀的代码，这是多么合算的买卖！&lt;/p&gt;

&lt;p&gt;我在参与ServiceComb社区前，只知道Java基本语法，IDE不熟练（之前一直是用VS写C#，不使用Eclipse和IntelliJ IDEA），不会Git，不懂Maven，还能有更糟糕的起点吗：）&lt;/p&gt;

&lt;p&gt;不用担心，社区会指导你。我前文提到的第一个简单的任务，花费了将近一周时间，被打回来了四五次后才被Merge；一个PR收获60+ Comments也是家常便饭。这个过程中我的Java水平成长得飞快，不久后就能独立承担新特性的设计和开发——&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/users/metrics-in-1.0.0-m1/&quot;&gt;Metrics&lt;/a&gt;，当然，完成这个新特性的过程中Committer和其他开发者给予了很多支持，所以，请大胆的提交你的第一个PR，成为一名Contributor吧。&lt;/p&gt;

&lt;h3 id=&quot;民主开放和透明consensus-open-and-transparency&quot;&gt;民主，开放和透明（Consensus, Open and Transparency）&lt;/h3&gt;
&lt;p&gt;在Apache社区里投票至关重要，你可以感受到你的建议将被充分重视，我很喜欢这种参与感；大家的讨论和建议也完全公开透明，并且能够长时间通过邮件列表查询到，沟通效率非常高。所以大家多多参与，一定能收获惊喜，从万能的社区里寻找自己想要的答案，请记住，&lt;strong&gt;当你对某个问题产生困惑，即使是强大的StackOverflow也不会有原作者的答复更为准确&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;写在最后，我想说从一名开源小白成长为Apache Committer并不是无比艰难又遥不可及的事情，&lt;strong&gt;只需要日积月累的在社区中投入一点业余时间，就能梦想成真&lt;/strong&gt;。当然最好找到自己感兴趣的社区，这会让这段旅途更加愉快，也能交到更多志同道合的的朋友。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;广告：我所在的Apache ServiceComb正&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/developers/contributing&quot;&gt;持续招募贡献者&lt;/a&gt;，非常欢迎大家加入，让我们一起构建更好的微服务框架。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>Yangyong Zheng</name><email>yangyong.zheng@huawei.com</email><uri>https://zhengyangyong.github.io</uri></author><category term="Committer" /><category term="Apache Way" /><summary type="html">如何从一名开源小白成长为Apache Committer</summary></entry><entry xml:lang="cn"><title type="html">轻松微服务系列：快速实现客户关系管理系统的用户服务</title><link href="/cn/docs/easy-build-microservice-system-part-II/" rel="alternate" type="text/html" title="轻松微服务系列：快速实现客户关系管理系统的用户服务" /><published>2018-05-23T00:00:00+08:00</published><updated>2018-05-23T19:05:00+08:00</updated><id>/cn/docs/easy-build-microservice-system-part-II</id><content type="html" xml:base="/cn/docs/easy-build-microservice-system-part-II/">&lt;h2 id=&quot;轻松微服务系列快速实现客户关系管理系统的用户服务&quot;&gt;轻松微服务系列：快速实现客户关系管理系统的用户服务&lt;/h2&gt;
&lt;p&gt;在前一篇博文&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/docs/easy-build-microservice-system-part-I/&quot;&gt;《轻松微服务系列：从一键构建微服务和DDD设计开始》&lt;/a&gt;，我们已经详细介绍了如何快速构建微服务和DDD相关概念，并引入了一个经典场景——地产CRM。通过&lt;a href=&quot;https://en.wikipedia.org/wiki/Event_storming&quot;&gt;Event Storming&lt;/a&gt;实践获得了系统设计：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/MicroserviceDesign4.png&quot; alt=&quot;MicroserviceDesign4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;现在，我们将从“用户微服务”入手，探索微服务实现过程中即将面对的细节，并轻松处理这些难点。&lt;/p&gt;

&lt;h3 id=&quot;用户微服务并不简单&quot;&gt;用户微服务并不简单&lt;/h3&gt;
&lt;p&gt;用户微服务是所有系统中不可或缺的部分，它承载了认证和授权等核心功能——无论是登录一个网站、还是打开一个APP，当涉及到需要身份识别后才能够执行的操作，都需要用户微服务把关。例如观看视频网站上的视频，匿名用户会插播广告，如果希望屏蔽广告，则需要登录并购买VIP会员，登录即是身份认证的过程，而VIP屏蔽广告即是授权的过程。&lt;/p&gt;

&lt;h4 id=&quot;认证&quot;&gt;认证&lt;/h4&gt;
&lt;p&gt;认证不仅仅是一次性验证用户名和密码的过程，还需要能反复使用认证的结果，确保后继所有操作都是合法的，这就涉及到“有状态”，但HTTP是一个无状态协议，如何能够将登录成功后的认证信息与后继的请求关联起来呢？&lt;/p&gt;

&lt;p&gt;我们非常熟悉的做法是使用Session或Cookie：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Session存储在服务端，因此具备良好的防篡改能力，但弊端是使服务有状态，微服务系统中，同一个微服务会依据系统压力的大小弹性伸缩出多个运行实例负载均衡，跨实例访问会状态丢失。&lt;/li&gt;
  &lt;li&gt;Cookie存储在客户端，它正好与Session相反，优势是服务不必保持状态，但弊端是客户比较容易的篡改Cookie信息，例如修改过期时间以逃避验证，而且浏览器对Cookie也有较多限制。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;那么，如何兼顾这两方面的需求呢？Token就是一个比较好的解决方案。&lt;/p&gt;

&lt;p&gt;Token中文翻译为令牌，它将登录认证后的信息签名后返回，服务端不保存，客户端请求的时候将认证的完整信息附带上提供给服务端验签，签名可以保证信息不被篡改。了解了了解Token的原理，自然要关注Token的格式，JWT就是这样一个基于JSON的开放标准&lt;a href=&quot;https://tools.ietf.org/html/rfc7519&quot;&gt;RFC-7519&lt;/a&gt;。&lt;/p&gt;

&lt;h5 id=&quot;jwt-java-web-token规范&quot;&gt;JWT （Java Web Token）规范&lt;/h5&gt;
&lt;p&gt;简而言之JWT规范由三部分构成：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Header： 声明Token的类型也就是JWT，以及加密算法，例如：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;typ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JWT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HS256&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Playload：存放有效信息，既包含标准签发者、用户、签发时间、过期时间，唯一标识等信息；也可以存放用户自定义的声明信息，例如权限控制相关的内容，例如：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1234567890&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;YangYong Zheng&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;iat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1516239022&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Signature：签名信息，包含Header和Playload的原始信息（Base64编码过）以及签名过后的信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：JWT IO提供了&lt;a href=&quot;https://jwt.io/&quot;&gt;在线编码和解码工具&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;授权&quot;&gt;授权&lt;/h4&gt;
&lt;p&gt;授权的本意是指将完成某项工作所必须的权力授给下属人员，在软件系统中往往引申为使人或角色具备访问特定资源或更改行为的许可。例如之前提到的VIP屏蔽广告，即是视频网站允许播放终端在特定的帐号登录后跳过广告播放环节（行为）的许可。&lt;/p&gt;

&lt;p&gt;授权系统比较常见的做法有ACL和RBAC：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;ACL：ACL全称Access Control List，它是以受控资源为核心，每一个受控资源，都有一个权限控制列表记录哪些用户或角色对这项资源执行具体操作（也被称为授权点）的权限设置，例如查询（可见）、修改、删除等等。Windows中的文件系统安全即是一个经典的ACL实现案例：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/ACL.png&quot; alt=&quot;ACL&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;RBAC：RBAC全称Role Based Access Control，与ACL相比，它以角色为核心，权限落地在角色上，不为特定用户授权。它的优势是大幅简化了用户与权限的管理，在受控对象不多或控制粒度要求不高（例如接口访问控制）的场景下非常适用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/RBAC.png&quot; alt=&quot;RBAC&quot; /&gt;&lt;/p&gt;

&lt;p&gt;由于微服务系统的权限控制主要是接口访问控制上，并且多采用用户组方式组织用户，因此RBAC是比较流行的做法。&lt;/p&gt;

&lt;h3 id=&quot;实现用户微服务&quot;&gt;实现用户微服务&lt;/h3&gt;
&lt;h4 id=&quot;第一步创建微服务项目&quot;&gt;第一步：创建微服务项目&lt;/h4&gt;
&lt;p&gt;还记得前一篇博文&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/docs/easy-build-microservice-system-part-I/&quot;&gt;《轻松微服务系列：从一键构建微服务和DDD设计开始》&lt;/a&gt;中一键构建微服务的命令行么？使用ServiceComb SpringMVC Archetypes创建用户微服务，在交互模式下，&lt;code class=&quot;highlighter-rouge&quot;&gt;groupId&lt;/code&gt;输入org.apache.servicecomb.scaffold，&lt;code class=&quot;highlighter-rouge&quot;&gt;artifactId&lt;/code&gt;输入user-service，&lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt;使用默认的1.0-SNAPSHOT，创建完毕后使用IDEA或Eclipse打开项目：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/UserServiceInit.png&quot; alt=&quot;UserServiceInit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;我们删掉HelloImpl和HelloConsumer，并添加自己的实现。&lt;/p&gt;

&lt;h4 id=&quot;第二步使用mysql持久化用户信息&quot;&gt;第二步：使用MySQL持久化用户信息&lt;/h4&gt;
&lt;p&gt;用户微服务需要持久化用户信息，我们使用MySQL数据库，ORM使用Spring Data JPA：&lt;/p&gt;
&lt;h5 id=&quot;引入依赖&quot;&gt;引入依赖&lt;/h5&gt;
&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;mysql&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;mysql-connector-java&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-data-jpa&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;定义存储user信息的userentity实体&quot;&gt;定义存储User信息的UserEntity实体&lt;/h5&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;T_User&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在CodeFist模式下，Spring Data JPA会在数据库中自动创建T_User表与此实体映射。&lt;/p&gt;

&lt;h5 id=&quot;实现userentity实体的repository&quot;&gt;实现UserEntity实体的Repository&lt;/h5&gt;
&lt;p&gt;我们继承JPA的PagingAndSortingRepository来实现ORM操作&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PagingAndSortingRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;配置数据库连接&quot;&gt;配置数据库连接&lt;/h5&gt;
&lt;p&gt;在项目的&lt;code class=&quot;highlighter-rouge&quot;&gt;resources&lt;/code&gt;目录下新增&lt;code class=&quot;highlighter-rouge&quot;&gt;application.properties&lt;/code&gt;文件，写入数据库连接信息：&lt;/p&gt;

&lt;div class=&quot;language-properties highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;spring.datasource.url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;jdbc:mysql://localhost:3306/user_db?useSSL=false&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.datasource.password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pwd&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;spring.jpa.hibernate.ddl-&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;update&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;spring.jpa.properties.hibernate.dialect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;org.hibernate.dialect.MySQL5Dialect&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：关于Spring Data JPA的更多资料请参见&lt;a href=&quot;https://projects.spring.io/spring-data-jpa/&quot;&gt;这篇文档&lt;/a&gt;，为了能够简化依赖的引入我们实际上使用的是Spring Boot JPA Starter，详细的例子请参见&lt;a href=&quot;https://spring.io/guides/gs/accessing-data-jpa/&quot;&gt;这篇文档&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;第三步实现jwt认证&quot;&gt;第三步：实现JWT认证&lt;/h4&gt;
&lt;h5 id=&quot;定义jwt接口&quot;&gt;定义JWT接口&lt;/h5&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;generate用于生成Token，validate用于验证Token是否正确。&lt;/p&gt;

&lt;h5 id=&quot;实现tokenstore&quot;&gt;实现TokenStore&lt;/h5&gt;
&lt;p&gt;我们使用&lt;a href=&quot;https://github.com/jwtk/jjwt&quot;&gt;jjwt&lt;/a&gt;提供的JWT实现，创建JwtTokenStore类，继承TokenStore接口，并重写方法：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JwtTokenStore&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JwtTokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondsToExpire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JwtTokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;secretKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;someSecretKeyForAuthentication&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;secondsToExpire&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;JwtTokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondsToExpire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;secretKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;secondsToExpire&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondsToExpire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jwts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSubject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setExpiration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZonedDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;plusSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secondsToExpire&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toInstant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;signWith&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HS512&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Jwts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
       &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setSigningKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secretKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseClaimsJws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getSubject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;JwtException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IllegalArgumentException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;validateToken token : &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; failed&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;第四步实现用户服务&quot;&gt;第四步：实现用户服务&lt;/h4&gt;
&lt;h5 id=&quot;定义userservice接口&quot;&gt;定义UserService接口&lt;/h5&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;logon用于新用户注册，login用于用户登录验证，UserDTO用于参数传递：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;实现并发布userservice&quot;&gt;实现并发布UserService&lt;/h5&gt;
&lt;p&gt;创建UserServiceImpl，继承&lt;code class=&quot;highlighter-rouge&quot;&gt;UserService&lt;/code&gt;接口：&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestSchema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;schemaId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserServiceImpl&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UserServiceImpl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TokenStore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;repository&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;tokenStore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;logon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validateUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user name had exist&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;incorrect user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validateUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;repository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dbUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tokenStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;generate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateAuthenticationHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;//add authentication header&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;wrong password&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;user name not exist&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;InvocationException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BAD_REQUEST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;incorrect user&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;validateUser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UserDTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isNotEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generateAuthenticationHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AUTHORIZATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;登录成功后，会从TokenStore生成Token，并将其写入Key为&lt;code class=&quot;highlighter-rouge&quot;&gt;AUTHORIZATION&lt;/code&gt;的Header。&lt;/p&gt;

&lt;h4 id=&quot;第五步实现授权可选&quot;&gt;第五步：实现授权（可选）&lt;/h4&gt;
&lt;p&gt;由于我们允许任何用户注册和登录，所以目前还没有授权的需求，基于RBAC构建授权体系将会在以后的博文中介绍。&lt;/p&gt;

&lt;p&gt;经过上面五步，具有基本注册和登录功能的用户微服务就构建好了。&lt;/p&gt;

&lt;h3 id=&quot;验证实现的用户服务&quot;&gt;验证实现的用户服务&lt;/h3&gt;
&lt;p&gt;启动用户微服务，我们先注册一个账号：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/TestLogon.png&quot; alt=&quot;TestLogon&quot; /&gt;&lt;/p&gt;

&lt;p&gt;显示注册成功，现在我们使用这个账号登录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/TestLogin.png&quot; alt=&quot;TestLogin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;返回登录成功，Response中已经包含了&lt;code class=&quot;highlighter-rouge&quot;&gt;AUTHORIZATION&lt;/code&gt;Header，后继的所有请求都需要使用这个Token值进行合法认证。&lt;/p&gt;

&lt;p&gt;至此，实现客户关系管理系统的用户服务工作就结束了，下一篇文章我们会将目光转移到Edge服务，通过Edge服务作为微服务调用的统一入口，在它之上构建统一认证，并讲解如何应对海量级调用的挑战，敬请期待！&lt;/p&gt;</content><author><name>Yangyong Zheng</name><email>yangyong.zheng@huawei.com</email><uri>https://zhengyangyong.github.io</uri></author><category term="Archetypes" /><category term="Scaffold" /><category term="Authentication" /><category term="JWT" /><summary type="html">轻松微服务系列：快速实现客户关系管理系统的用户服务</summary></entry><entry xml:lang="cn"><title type="html">轻松微服务系列：从一键构建微服务和DDD设计开始</title><link href="/cn/docs/easy-build-microservice-system-part-I/" rel="alternate" type="text/html" title="轻松微服务系列：从一键构建微服务和DDD设计开始" /><published>2018-05-17T00:00:00+08:00</published><updated>2018-05-17T19:05:00+08:00</updated><id>/cn/docs/easy-build-microservice-system-part-I</id><content type="html" xml:base="/cn/docs/easy-build-microservice-system-part-I/">&lt;h2 id=&quot;轻松微服务系列从一键构建微服务和ddd设计开始&quot;&gt;轻松微服务系列：从一键构建微服务和DDD设计开始&lt;/h2&gt;
&lt;p&gt;提到微服务，相信“程序猿”们已经不再陌生，估计大家都多少尝试过微服务框架，也遇到了不少“坑”直呼坑爹吧？其实微服务完全可以使用脚手架功能一键构建出来，开箱即用，而DDD（Domain-Driven Design），也是有章可循。这个“轻松微服务”系列，将为大家开启“轻松”愉快之旅。&lt;/p&gt;

&lt;h3 id=&quot;牛刀小试&quot;&gt;牛刀小试&lt;/h3&gt;
&lt;p&gt;打开命令行，输入下面的命令：&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate -DarchetypeGroupId&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.apache.servicecomb.archetypes -DarchetypeArtifactId&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;business-service-jaxrs-archetype -DarchetypeVersion&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.0.0-m2-SNAPSHOT -DarchetypeRepository&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://repository.apache.org/content/groups/snapshots-group
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：由于Java Chassis Archetypes还处于SNAPSHOT阶段，Repository托管在Apache Snapshots库中，仅用于测试，所以下载速度会稍慢。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;之后按提示指定微服务的&lt;code class=&quot;highlighter-rouge&quot;&gt;groupId&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;artifactId&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;version&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt;等信息，回车，一个新的微服务就创建好了：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/ArchetypesCreate.png&quot; alt=&quot;Archetypes创建&quot; /&gt;&lt;/p&gt;

&lt;p&gt;运行它也很简单，使用IDE打开项目，DEBUG -&amp;gt; Application.java，或在命令行：&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#编译打包&lt;/span&gt;
mvn package
&lt;span class=&quot;c&quot;&gt;#切换到输出目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target
&lt;span class=&quot;c&quot;&gt;#启动可执行jar包&lt;/span&gt;
java -jar xxxx.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;稍等微服务启动就绪，打开浏览器输入&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:8080/hello&lt;/code&gt;验证一下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/OutputHello.png&quot; alt=&quot;输出hello&quot; /&gt;&lt;/p&gt;

&lt;p&gt;是不是非常轻松呢？这份轻松来源我们使用Archetypes优化了构建过程，它是脚手架的基础。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：如果想了解更多Archetypes的原理，请参考&lt;a href=&quot;https://maven.apache.org/archetype-archives/archetype-2.3/maven-archetype-plugin/&quot;&gt;这篇文档&lt;/a&gt;，希望理解命令行中使用到的参数，请参考&lt;a href=&quot;https://maven.apache.org/archetype-archives/archetype-2.3/maven-archetype-plugin/generate-mojo.html&quot;&gt;这篇文档&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;脚手架&quot;&gt;脚手架&lt;/h3&gt;
&lt;p&gt;在建筑领域，脚手架是施工现场为方便工人操作并解决垂直和水平运输而搭设的各种支架以及平台。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/Scaffold.jpg&quot; alt=&quot;scaffold&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在软件开发领域，它引申为预提供一些基础框架代码加速开发过程，避免从零开始构建项目。用户只需要依据需求场景选择合适的脚手架，然后填充定制的业务逻辑即可，不必再去处理一些基础功能，例如数据库连接、日志实现、RPC传输等。&lt;/p&gt;

&lt;p&gt;微服务框架一般都会提供脚手架功能，例如Spring，提供了Spring initializr：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/SpringInitializr.png&quot; alt=&quot;SpringInitializr&quot; /&gt;&lt;/p&gt;

&lt;p&gt;它集成了Spring Boot和Spring Cloud丰富的组件，创建出来的项目POM中将自动包含用户选中的依赖。&lt;/p&gt;

&lt;p&gt;ServiceComb Java Chassis提供的脚手架具备更明显的优势：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;对每一种编程模型都提供了对应的&lt;a href=&quot;https://github.com/apache/incubator-servicecomb-java-chassis/tree/master/archetypes&quot;&gt;Archetypes项目&lt;/a&gt;，包括SpringMVC、JAXRS、POJO和Spring Boot Starter；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;生成的项目除了在POM中自动添加必要的依赖，还会提供Producer和Consumer示例代码（Hello World）；&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不久后会进一步提供&lt;strong&gt;Edge Server&lt;/strong&gt;、&lt;strong&gt;Authcation Server&lt;/strong&gt;等更贴近业务的脚手架项目，让用户能快速构建体系完整的微服务系统。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;前面牛刀小试中展示的一键构建微服务，正是基于它们：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/ArchetypeProjects.png&quot; alt=&quot;ArchetypeProjects&quot; /&gt;&lt;/p&gt;

&lt;p&gt;那么什么叫一个完整的微服务系统呢？我们可以拿一个具体的场景做例子，会更有感觉：&lt;/p&gt;

&lt;h3 id=&quot;场景地产crm&quot;&gt;场景：地产CRM&lt;/h3&gt;
&lt;p&gt;您经营着一家房地产开发商，销售房产，迫切需要一套销售系统，考虑到微服务的优势，您决定使用微服务的方式构建系统；主要的业务流程也非常简单：用户前来购买购买产品（房产），首先需要登记用户信息，并缴纳一定数量的定金，待交易当日，挑选心仪的产品（房产），支付尾款，完成交易。&lt;/p&gt;

&lt;h4 id=&quot;使用ddd指导地产crm系统的设计&quot;&gt;使用DDD指导地产CRM系统的设计&lt;/h4&gt;
&lt;p&gt;微服务系统的设计自然离不开DDD（Domain-Driven Design），它由Eric Evans提出，是一种全新的系统设计和建模方法，这里的模型指的就是领域模型（Domain Model）。领域模型通过聚合（Aggregate）组织在一起，聚合间有明显的业务边界，这些边界将领域划分为一个个限界上下文（Bounded Context）。Martin Fowler对它们都有详细的&lt;a href=&quot;https://martinfowler.com/tags/domain%20driven%20design.html&quot;&gt;解读&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;理论概念都搞清楚了，那么怎么来找模型和聚合呢？一个非常流行的方法就是&lt;a href=&quot;https://en.wikipedia.org/wiki/Event_storming&quot;&gt;Event Storming&lt;/a&gt;，它是由Alberto Brandolini发明，经历了DDD社区和很多团队的实践，也是一种非常有参与感的团队活动：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/EventStorming.png&quot; alt=&quot;EventStorming&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图就是我们对地产CRM这个场景使用Event Storming探索的结果，现在我们能够将限界上下文清晰的梳理出来：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/BoundedContext.png&quot; alt=&quot;BoundedContext&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：Event Storming是一项非常有创造性的活动，也是一个持续讨论和反复改进的过程，不同的团队关注的核心域（Core Domain）不同，得到的最终结果也会有差异。我们的目的是为了演示完整的微服务系统构建的过程，并不涉及商业核心竞争力方面的探讨，因此没有Core Domain和Sub Domain之类的偏重。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;将分析成果转化为方案域设计&quot;&gt;将分析成果转化为方案域设计&lt;/h4&gt;
&lt;p&gt;当我们完成所有的限界上下文的识别后，可以直接将它们落地为微服务：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/MicroserviceDesign1.png&quot; alt=&quot;MicroserviceDesign1&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用户服务：提供用户信息管理服务，这里保存这用户的账号和密码，负责登录和认证；&lt;/li&gt;
  &lt;li&gt;产品（房产）服务：提供产品管理服务，保存着房产的信息诸如价格、是否已售出等信息；&lt;/li&gt;
  &lt;li&gt;支付服务：提供交易时支付服务，模拟对接银行支付定金，以及购房时支付尾款；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;由于完成一笔交易是一个复杂的流程，与这三个微服务都有关联，因此我们引入了一个复合服务——交易服务：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/MicroserviceDesign2.png&quot; alt=&quot;MicroserviceDesign2&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;交易服务：提供产品交易服务，它通过编排调用将整个交易流程串起来,交易服务中有两个流程：
    &lt;ul&gt;
      &lt;li&gt;定金支付&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Step1：通过用户服务验证用户身份；&lt;/p&gt;

    &lt;p&gt;Step2：通过支付服务请求银行扣款，增加定金账号内的定金；&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;购房交易&lt;/p&gt;

    &lt;p&gt;Step1：通过用户服务验证用户身份；&lt;/p&gt;

    &lt;p&gt;Step2：通过资源服务确定用户希望购买的资源（房产）尚未售出；&lt;/p&gt;

    &lt;p&gt;Step3：通过资源服务标记目标资源（房产）已售出；&lt;/p&gt;

    &lt;p&gt;Step4：通过支付服务请求扣减定金账号内的定金，以及银行扣剩下的尾款；&lt;/p&gt;

    &lt;p&gt;最后两个步骤需要保证事务一致性，其中Step4包含两个扣款操作。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;之后，我们引入Edge服务提供统一入口：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/MicroserviceDesign3.png&quot; alt=&quot;MicroserviceDesign3&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Edge服务：很多时候也被称为API网关（API Gateway），负责集中认证、动态路由等等；&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;提示：Edge服务需要依赖服务注册-发现机制，因此同时导入了ServiceCenter。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最后还需要提供UI：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/scaffold/MicroserviceDesign4.png&quot; alt=&quot;MicroserviceDesign4&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;前端UI（同样以微服务方式提供）：用户交互界面；&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;至此，DDD设计地产CRM的工作就结束了，从下一篇文章开始，我们将和您一起轻松愉快的开启代码构建之旅，敬请期待！&lt;/p&gt;</content><author><name>Yangyong Zheng</name><email>yangyong.zheng@huawei.com</email><uri>https://zhengyangyong.github.io</uri></author><category term="Archetypes" /><category term="Scaffold" /><summary type="html">轻松微服务系列：从一键构建微服务和DDD设计开始</summary></entry><entry xml:lang="cn"><title type="html">ServiceComb Saga使用Cucumber做验收测试源码分析</title><link href="/cn/docs/saga_with_cucumber/" rel="alternate" type="text/html" title="ServiceComb Saga使用Cucumber做验收测试源码分析" /><published>2018-04-28T00:00:00+08:00</published><updated>2018-04-27T19:05:00+08:00</updated><id>/cn/docs/saga_with_cucumber</id><content type="html" xml:base="/cn/docs/saga_with_cucumber/">&lt;h3 id=&quot;servicecomb-saga使用cucumber做验收测试源码分析&quot;&gt;ServiceComb Saga使用Cucumber做验收测试源码分析&lt;/h3&gt;

&lt;h4 id=&quot;cucumber-简介&quot;&gt;Cucumber 简介&lt;/h4&gt;

&lt;p&gt;Cucumber 是一个能够理解用普通语言描述的测试用例的自动化测试工具，可以让人们用近似自然的语言去描述特性Feature和场景Scenario，根据Feature驱动开发，用作软件技术人员和非技术之间验收测试的桥梁。它是一个命令行工具，运行后会执行features中的内容，feature中的step会调用step definitions 可以用标签来组织场景支持40多种语言包括 Java, Ruby 等。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cucumber.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cucumber开发过程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建feature文件，feature文件中描述了测试用例集（Features），测试用例(Scenarios)，创建测试所需环境(Given)，触发被测试事件(When)和结果验证(Then)&lt;/li&gt;
  &lt;li&gt;创建step_definitions，此代码根据上面创建的feature文件，映射feature中的Gherkin Step为按步骤执行的代码，类似胶水的作用。&lt;/li&gt;
  &lt;li&gt;执行cucumber执行指令，格式化输出&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多关于Cucumber的介绍请参考&lt;a href=&quot;https://cucumber.io/&quot;&gt;官网文档[2]&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&quot;saga-使用-cucumber&quot;&gt;Saga 使用 Cucumber&lt;/h4&gt;

&lt;p&gt;Saga项目对其下行程预定demo做了验收测试，我们对照Cucumber的开发过程分别分析成功执行完所有事务和出现异常时的自动化测试开发，在行程预定的demo中，全局事务&lt;code class=&quot;highlighter-rouge&quot;&gt;booking&lt;/code&gt;有两个子事务分别是预定酒店服务&lt;code class=&quot;highlighter-rouge&quot;&gt;Hotel&lt;/code&gt;和包车服务&lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;，只有酒店服务和包车服务全部成功行程预定服务才算成功，否则全部失败并回滚补偿。demo中假定了房源紧张，每个用户最多只能预定2间，关于此行程规划demo细节请参考&lt;a href=&quot;https://github.com/apache/incubator-servicecomb-saga/tree/master/saga-demo/booking&quot;&gt;文档[3]&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;成功完成所有事务&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;创建feature文件&lt;code class=&quot;highlighter-rouge&quot;&gt;pack_success_scenario.feature&lt;/code&gt;，定义Feature，并在feature中定义step&lt;/p&gt;

        &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Feature: Alpha records transaction events

  Scenario: Everything is normal
    Given Car Service is up and running
    And Hotel Service is up and running
    And Booking Service is up and running
    And Alpha is up and running

    When User Sean requests to book 2 cars and 1 rooms

    Then Alpha records the following events
      | serviceName  | &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;             |
      | pack-booking | SagaStartedEvent |
      | pack-car     | TxStartedEvent   |
      | pack-car     | TxEndedEvent     |
      | pack-hotel   | TxStartedEvent   |
      | pack-hotel   | TxEndedEvent     |
      | pack-booking | SagaEndedEvent   |

    And Car Service contains the following booking orders
      | name | amount | confirmed | cancelled |
      | Sean | 2      | &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;      | &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;     |

    And Hotel Service contains the following booking orders
      | name | amount | confirmed | cancelled |
      | Sean | 1      | &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;      | &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;     |
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Given&lt;/code&gt; 定义了测试用例&lt;code class=&quot;highlighter-rouge&quot;&gt;Everything is normal&lt;/code&gt;所需的4个条件分别是4个服务运行正常，&lt;code class=&quot;highlighter-rouge&quot;&gt;When&lt;/code&gt;定义了触发用户&lt;code class=&quot;highlighter-rouge&quot;&gt;Sean&lt;/code&gt;发起预定2辆车和1间房子的被测事件。&lt;code class=&quot;highlighter-rouge&quot;&gt;Then&lt;/code&gt;中则指定了验证结果是&lt;code class=&quot;highlighter-rouge&quot;&gt;Alpha&lt;/code&gt;记录的各子事务及子事务发生顺序，&lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;服务和&lt;code class=&quot;highlighter-rouge&quot;&gt;Hotel&lt;/code&gt;服务则记录预定结果。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;创建step_definitions &lt;code class=&quot;highlighter-rouge&quot;&gt;PackStepdefs.java&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;在step_definition中使用正则的方式对应feature中定义的的测试条件，触发测试并验证结果。如：&lt;/p&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;Given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^Car Service is up and running$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;probe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAR_SERVICE_ADDRESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;上面代码对应feature中第一个测试前提条件&lt;code class=&quot;highlighter-rouge&quot;&gt;Given car service is up and running&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;probe&lt;/code&gt;函数式方位&lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;服务的一个Rest接口验证返回状态码来判断&lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;是否正常启动运行。接下来四个&lt;code class=&quot;highlighter-rouge&quot;&gt;Given&lt;/code&gt;与此类似。&lt;/p&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;When&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^User ([A-Za-z]+) requests to book ([0-9]+) cars and ([0-9]+) rooms$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rooms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received request from user {} to book {} cars and {} rooms&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rooms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pathParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pathParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rooms&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rooms&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pathParam&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cars&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;booking.service.address&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/booking/{name}/{rooms}/{cars}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;此段代码解析feature中定义的&lt;code class=&quot;highlighter-rouge&quot;&gt;When User Sean requests to book 2 cars and 1 rooms&lt;/code&gt;事件，解析出用户、预定车辆和房间数量参数并向&lt;code class=&quot;highlighter-rouge&quot;&gt;Booking&lt;/code&gt;服务发出&lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;方法的请求，然后在下面代码的&lt;code class=&quot;highlighter-rouge&quot;&gt;Then&lt;/code&gt;中验证结果：&lt;/p&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Then&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^Alpha records the following events$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataTable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;[]&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columnStrippingConsumer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retainAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;topCells&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dataMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ALPHA_REST_ADDRESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/events&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columnStrippingConsumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;And&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^Car Service contains the following booking orders$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataTable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dataMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CAR_SERVICE_ADDRESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/bookings&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NO_OP_CONSUMER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;And&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^Hotel Service contains the following booking orders$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataTable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;dataMatches&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getProperty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HOTEL_SERVICE_ADDRESS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/bookings&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NO_OP_CONSUMER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;

        &lt;p&gt;上面代码对应feature中&lt;code class=&quot;highlighter-rouge&quot;&gt;Then&lt;/code&gt;结果从三方面验证预定事件是否符合预期：&lt;code class=&quot;highlighter-rouge&quot;&gt;Alpha&lt;/code&gt;服务中记录的事件顺序、&lt;code class=&quot;highlighter-rouge&quot;&gt;Car&lt;/code&gt;服务的预定结果和 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hotel&lt;/code&gt;服务中的预定结果。&lt;code class=&quot;highlighter-rouge&quot;&gt;DataTable&lt;/code&gt;解析了feature中定义的事件结果和顺序，&lt;code class=&quot;highlighter-rouge&quot;&gt;dataMatches&lt;/code&gt;将此结果与各服务中查询到的结果进行比较验证是不是符合预期。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;执行Command &lt;code class=&quot;highlighter-rouge&quot;&gt;RunCucumberIT.java&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Runwith(Cucumber.class)&lt;/code&gt;指定使用Cucumber测试框架入口，并在&lt;code class=&quot;highlighter-rouge&quot;&gt;@CucumberOptions&lt;/code&gt;中指定feature目录和输出格式。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;有子事务出现异常测试&lt;/p&gt;

    &lt;p&gt;由于房源紧张，限制每个用户最多预订2间房，当用户预订超过2间时会抛出异常：&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Compensable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compensationMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cancel&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HotelBooking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;booking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;booking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAmount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;can not order the rooms large than two&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;booking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;confirm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;bookings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;booking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;booking&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;在此异常测试中我们预订事件中预订3间房，由于订房间失败，整个行程事务没有成功，对已经成功执行的订车子事务进行补偿保证原子性。&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;创建feature文件&lt;code class=&quot;highlighter-rouge&quot;&gt;pack_compensation_scenario.feature&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;与成功的行程规划测试中不同的只有触发的预定事件和最终的结果，前提条件都是4个服务启动并运行，所以feature只要修改&lt;code class=&quot;highlighter-rouge&quot;&gt;When&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;Then&lt;/code&gt;内容即可（Features和Scenarios名也要对应修改）&lt;/p&gt;

        &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s&quot;&gt;When User Sean requests to book 5 cars and 3 rooms&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Alpha records the following events&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| serviceName  | type               |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-booking | SagaStartedEvent   |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxStartedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxEndedEvent       |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-hotel   | TxStartedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-hotel   | TxAbortedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxCompensatedEvent |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | SagaEndedEvent     |&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Car Service contains the following booking orders&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| name | amount | confirmed | cancelled |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| Sean | 5      | false     | true      |&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Hotel Service contains the following booking orders&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| name | amount | confirmed | cancelled |&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;step_definition和Command与之前一样，不需要任何修改，触发预定超过3个房间的操作后，&lt;code class=&quot;highlighter-rouge&quot;&gt;Alpha&lt;/code&gt;会记录Hotel服务的&lt;code class=&quot;highlighter-rouge&quot;&gt;TxAbortedEvent&lt;/code&gt;和Car服务的&lt;code class=&quot;highlighter-rouge&quot;&gt;TxCompensatedEvent&lt;/code&gt;时间，此外Car服务的预定记录中会有取消为&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;的记录。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;通过以上两个例子分析，Cucumber开发只需要在feature中定义好测试所需条件，触发事件和结果验证信息，然后在step_definition中进行解析验证即可。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;byteman-规则注入&quot;&gt;Byteman 规则注入&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Byteman&lt;/code&gt;可以在代码的任意位置注入代码，并可以在注入的代码中访问当前方法中变量，包括方法参数、局部变量、调用其他函数的参数值、返回值等。更多关于Byteman的介绍请参考&lt;a href=&quot;http://byteman.jboss.org/docs.html&quot;&gt;官方文档[4]&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;Byteman开发过程：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;创建规则脚本.btm文件&lt;/p&gt;

    &lt;p&gt;根据byteman语法创建规则，包括规则名，目标类，目标方法，注入位置，注入内容等，下面是一个在&lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;函数入口注入打印语句的规则文件例子&lt;/p&gt;

    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;RULE trace main entry&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;CLASS AppMain&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;METHOD main&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AT ENTRY&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;IF true&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;DO traceln(&quot;entering main&quot;)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;ENDRULE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;在安装了byteman环境的机器上用javaagent参数指定加载规则文件运行AppMain即可在main函数入口处打印出&lt;code class=&quot;highlighter-rouge&quot;&gt;entering main&lt;/code&gt;。例子&lt;a href=&quot;https://github.com/adinn/byteman-tutorial1&quot;&gt;源码请参考[5]&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;加载规则并运行&lt;/p&gt;

    &lt;p&gt;除了上面例子中通过命令行指定javaagent指定byteman 规则文件的加载方式外，还可以通过Java代码的方式加载，如下&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Submit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Submit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addRulesFromFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;org.jboss.byteman.agent.submit.Submit&lt;/code&gt;提供的加载规则的方法有通过文件加载&lt;code class=&quot;highlighter-rouge&quot;&gt;addRulesFromFiles&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;addRulesFromResources&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;同样，byteman提供了移除规则的方法&lt;code class=&quot;highlighter-rouge&quot;&gt;deleteRulesFromFiles&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;deleteRulesFromResources&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;deleteAllRules&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;saga-使用-cucumber-集成-byteman&quot;&gt;Saga 使用 Cucumber 集成 Byteman&lt;/h4&gt;

&lt;p&gt;Saga在Cucumber中集成了byteman注入一个超时异常，测试Saga对超时处理是否符合预期。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建byteman规则文件：&lt;code class=&quot;highlighter-rouge&quot;&gt;booking_timeout.btm&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s&quot;&gt;RULE set the saga timeout to 5s&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;INTERFACE org.apache.servicecomb.saga.omega.context.annotations.SagaStart&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;METHOD timeout&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AT EXIT&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;IF TRUE&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;DO RETURN 5&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;ENDRULE&lt;/span&gt;

&lt;span class=&quot;s&quot;&gt;RULE sleep when postBooking until timeout happens&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;CLASS org.apache.servicecomb.saga.demo.pack.booking.BookingController&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;METHOD postBooking&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;AT ENTRY&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;IF TRUE&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;DO debug(&quot;delay 10s until the booking timeout&quot;),&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;Thread.sleep(10000)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;ENDRULE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;这里定义了两个规则，第一个规则&lt;code class=&quot;highlighter-rouge&quot;&gt;set the saga timeout to 5s&lt;/code&gt;在注解&lt;code class=&quot;highlighter-rouge&quot;&gt;@SagaStart&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;方法中返回5表示设置超时时间值为5秒。第二个规则&lt;code class=&quot;highlighter-rouge&quot;&gt;sleep when postBooking until timeout happens&lt;/code&gt;在类&lt;code class=&quot;highlighter-rouge&quot;&gt;BookingController&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;postBooking&lt;/code&gt;方法中注入&lt;code class=&quot;highlighter-rouge&quot;&gt;Thread.sleep(10000)&lt;/code&gt;，让&lt;code class=&quot;highlighter-rouge&quot;&gt;postBooking&lt;/code&gt;方法阻塞10秒，原来的&lt;code class=&quot;highlighter-rouge&quot;&gt;postBooking&lt;/code&gt;方法是一个空方法，注入byteman的阻塞方法后会触发预定行程服务的超时异常。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建feature文件：&lt;code class=&quot;highlighter-rouge&quot;&gt;pack_timeout_scenario.feature&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt; 	&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Given Install the byteman script booking_timeout.btm to Booking Service&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;When User Sean requests to book 1 cars and 1 rooms&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Alpha records the following events&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| serviceName  | type               |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-booking | SagaStartedEvent   |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxStartedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxEndedEvent       |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-hotel   | TxStartedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-hotel   | TxEndedEvent       |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-booking | TxAbortedEvent     |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-hotel   | TxCompensatedEvent |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-car     | TxCompensatedEvent |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| pack-booking | SagaEndedEvent     |&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Car Service contains the following booking orders&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| name | amount | confirmed | cancelled |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| Sean | 1      | false     | true      |&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;Then Hotel Service contains the following booking orders&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| name | amount | confirmed | cancelled |&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;| Sean | 1      | false     | true      |&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;在行程预定的例子中仍然以4个服务启动并运行为前提，然后加载上面创建的byteman规则文件和目标服务：&lt;code class=&quot;highlighter-rouge&quot;&gt;Booking&lt;/code&gt;。然后触发预定一辆车和一间房的操作。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;step_definition解析&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;Given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;^Install the byteman script ([A-Za-z0-9_\\.]+) to ([A-Za-z]+) Service$&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Install the byteman script {} to {} service&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;target/test-classes/&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Submit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getBytemanSubmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;bm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addRulesFromFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;在Cucumber解析文件中用正则方法获取目标规则和服务名，&lt;code class=&quot;highlighter-rouge&quot;&gt;getBytemanSubmit&lt;/code&gt;根据服务名&lt;code class=&quot;highlighter-rouge&quot;&gt;service&lt;/code&gt;参数来获取目标服务的地址和byteman监听端口，并将本地规则注入到目标服务中，注入原理是&lt;code class=&quot;highlighter-rouge&quot;&gt;Booking&lt;/code&gt;启动时是带着byteman参数启动的：&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-Dorg.jboss.byteman.debug&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Dorg.jboss.byteman.verbose&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;tru
-javaagent:/maven/saga/byteman.jar&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;port:9091,address:0.0.0.0,listener:true
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;执行&lt;code class=&quot;highlighter-rouge&quot;&gt;bm.addRulesFromFiles(rules);&lt;/code&gt;时就可以把本地规则通过Socket发送到&lt;code class=&quot;highlighter-rouge&quot;&gt;Booking&lt;/code&gt;服务，并由Byteman完成字节替换。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;结果验证&lt;/p&gt;

    &lt;p&gt;注入规则后触发预定车辆和房间服务时预定服务会出现超时，Saga会对已经完成的订车和订房间子事务进行补偿，Alpha中记录了一些列事件以及他们发生的顺序，另外Car服务和Hotel服务的取消标记&lt;code class=&quot;highlighter-rouge&quot;&gt;cancelled&lt;/code&gt;也为&lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;代码中使用Cucumber和Byteman要先通过pom引入相关依赖&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.cucumber&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cucumber-java8&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${cucumber.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;io.cucumber&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;cucumber-junit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${cucumber.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.jboss.byteman&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;byteman-submit&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${byteman.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;本地运行调试需要在启动的时候使用javaagent启动byteman，建议通过修改docker-compose.yaml文件，指定可执行jar的启动参数，并修改stepdef解析文件中各个服务地址，个服务启动运行后在IDEA中运行相应的feature文件即可进行调试测试。运行调试版代码可参考&lt;a href=&quot;https://github.com/lijasonvip/incubator-servicecomb-saga/tree/debug-cucumber-byteman&quot;&gt;个人分支代码[6]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;欢迎开发者朋友们加入ServiceComb社区，一起做些有意思的事情。&lt;a href=&quot;http://servicecomb.incubator.apache.org/cn/docs/join_the_community/&quot;&gt;加入社区方法[7]&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;参考资料&quot;&gt;参考资料&lt;/h4&gt;

&lt;p&gt;[1] ServiceComb Saga  https://github.com/apache/incubator-servicecomb-saga&lt;/p&gt;

&lt;p&gt;[2] Cucumber  https://cucumber.io/&lt;/p&gt;

&lt;p&gt;[3] Saga booking demo  https://github.com/apache/incubator-servicecomb-saga/tree/master/saga-demo/booking&lt;/p&gt;

&lt;p&gt;[4] Byteman  http://byteman.jboss.org/docs.html&lt;/p&gt;

&lt;p&gt;[5] Byteman demo https://github.com/adinn/byteman-tutorial1&lt;/p&gt;

&lt;p&gt;[6] debug 分支 https://github.com/lijasonvip/incubator-servicecomb-saga/tree/debug-cucumber-byteman&lt;/p&gt;

&lt;p&gt;[7] 加入ServiceComb 社区  http://servicecomb.incubator.apache.org/cn/docs/join_the_community/&lt;/p&gt;</content><author><name>Li Bo</name><email>libo75@huawei.com</email></author><category term="Saga" /><category term="Cucumber" /><summary type="html">ServiceComb Saga使用Cucumber做验收测试源码分析</summary></entry></feed>